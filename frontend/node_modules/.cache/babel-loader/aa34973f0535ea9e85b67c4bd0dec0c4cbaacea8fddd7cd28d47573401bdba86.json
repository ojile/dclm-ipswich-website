{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\dclm-ipswich-website\\\\frontend\\\\src\\\\assets\\\\context\\\\MinistryContext.js\",\n  _s = $RefreshSig$();\n// src/context/MinistryContext.js\n\nimport React, { createContext, useState, useEffect } from 'react';\nimport ministryService from '../../services/ministryService';\n\n// Create a Context for Ministry data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MinistryContext = /*#__PURE__*/createContext();\n\n// Provider component to wrap the part of the app that needs access to the ministry data\nexport const MinistryProvider = ({\n  children\n}) => {\n  _s();\n  const [ministries, setMinistries] = useState([]);\n\n  // Sample function to fetch ministry data (replace with your actual API call or data source)\n  const fetchMinistries = async () => {\n    try {\n      // Replace this with your actual data fetching logic\n      const response = await fetch('/path/to/your/api/ministries');\n      const data = await response.json();\n      setMinistries(data);\n    } catch (error) {\n      console.error('Error fetching ministries:', error);\n    }\n  };\n\n  // Fetch ministry data when the component mounts\n  useEffect(() => {\n    fetchMinistries();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(MinistryContext.Provider, {\n    value: {\n      ministries,\n      setMinistries\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(MinistryProvider, \"1Gp9trDTQM0lhkQKCB7qlxGlACs=\");\n_c = MinistryProvider;\nvar _c;\n$RefreshReg$(_c, \"MinistryProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","ministryService","jsxDEV","_jsxDEV","MinistryContext","MinistryProvider","children","_s","ministries","setMinistries","fetchMinistries","response","fetch","data","json","error","console","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/dclm-ipswich-website/frontend/src/assets/context/MinistryContext.js"],"sourcesContent":["// src/context/MinistryContext.js\r\n\r\nimport React, { createContext, useState, useEffect } from 'react';\r\nimport ministryService from '../../services/ministryService';\r\n\r\n// Create a Context for Ministry data\r\nexport const MinistryContext = createContext();\r\n\r\n// Provider component to wrap the part of the app that needs access to the ministry data\r\nexport const MinistryProvider = ({ children }) => {\r\n  const [ministries, setMinistries] = useState([]);\r\n\r\n  // Sample function to fetch ministry data (replace with your actual API call or data source)\r\n  const fetchMinistries = async () => {\r\n    try {\r\n      // Replace this with your actual data fetching logic\r\n      const response = await fetch('/path/to/your/api/ministries');\r\n      const data = await response.json();\r\n      setMinistries(data);\r\n    } catch (error) {\r\n      console.error('Error fetching ministries:', error);\r\n    }\r\n  };\r\n\r\n  // Fetch ministry data when the component mounts\r\n  useEffect(() => {\r\n    fetchMinistries();\r\n  }, []);\r\n\r\n  return (\r\n    <MinistryContext.Provider value={{ ministries, setMinistries }}>\r\n      {children}\r\n    </MinistryContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,eAAe,MAAM,gCAAgC;;AAE5D;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,eAAe,gBAAGN,aAAa,CAAC,CAAC;;AAE9C;AACA,OAAO,MAAMO,gBAAgB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAChD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACA,MAAMW,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;MAC5D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCL,aAAa,CAACI,IAAI,CAAC;IACrB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD;EACF,CAAC;;EAED;EACAf,SAAS,CAAC,MAAM;IACdU,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA,CAACC,eAAe,CAACa,QAAQ;IAACC,KAAK,EAAE;MAAEV,UAAU;MAAEC;IAAc,CAAE;IAAAH,QAAA,EAC5DA;EAAQ;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE/B,CAAC;AAACf,EAAA,CAzBWF,gBAAgB;AAAAkB,EAAA,GAAhBlB,gBAAgB;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}