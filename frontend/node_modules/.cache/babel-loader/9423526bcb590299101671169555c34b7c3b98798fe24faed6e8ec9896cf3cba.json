{"ast":null,"code":"const handleSubmit = async e => {\n  e.preventDefault();\n  setIsLoading(true);\n  setError(''); // Clear any previous error message\n\n  try {\n    // For testing, you can skip the backend request and simulate successful login\n    const username = credentials.username;\n    const password = credentials.password;\n\n    // Mock authentication\n    if (username === 'talakudula' && password === 'yourpassword') {\n      // Simulate storing a token\n      localStorage.setItem('token', 'mock-token');\n      console.log('Logged in successfully');\n    } else {\n      throw new Error('Invalid credentials'); // Simulate an error\n    }\n  } catch (err) {\n    setError(err.message); // Display error message\n  } finally {\n    setIsLoading(false); // Stop loading state\n  }\n};","map":{"version":3,"names":["handleSubmit","e","preventDefault","setIsLoading","setError","username","credentials","password","localStorage","setItem","console","log","Error","err","message"],"sources":["C:/Users/Lenovo/Desktop/dclm-ipswich-website/frontend/src/components/Login.js"],"sourcesContent":["const handleSubmit = async (e) => {\r\n  e.preventDefault();\r\n  setIsLoading(true);\r\n  setError(''); // Clear any previous error message\r\n\r\n  try {\r\n    // For testing, you can skip the backend request and simulate successful login\r\n    const username = credentials.username;\r\n    const password = credentials.password;\r\n\r\n    // Mock authentication\r\n    if (username === 'talakudula' && password === 'yourpassword') {\r\n      // Simulate storing a token\r\n      localStorage.setItem('token', 'mock-token'); \r\n      console.log('Logged in successfully');\r\n    } else {\r\n      throw new Error('Invalid credentials');  // Simulate an error\r\n    }\r\n\r\n  } catch (err) {\r\n    setError(err.message);  // Display error message\r\n  } finally {\r\n    setIsLoading(false); // Stop loading state\r\n  }\r\n};\r\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,MAAOC,CAAC,IAAK;EAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;EAClBC,YAAY,CAAC,IAAI,CAAC;EAClBC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEd,IAAI;IACF;IACA,MAAMC,QAAQ,GAAGC,WAAW,CAACD,QAAQ;IACrC,MAAME,QAAQ,GAAGD,WAAW,CAACC,QAAQ;;IAErC;IACA,IAAIF,QAAQ,KAAK,YAAY,IAAIE,QAAQ,KAAK,cAAc,EAAE;MAC5D;MACAC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAE,YAAY,CAAC;MAC3CC,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;IACvC,CAAC,MAAM;MACL,MAAM,IAAIC,KAAK,CAAC,qBAAqB,CAAC,CAAC,CAAE;IAC3C;EAEF,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZT,QAAQ,CAACS,GAAG,CAACC,OAAO,CAAC,CAAC,CAAE;EAC1B,CAAC,SAAS;IACRX,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;EACvB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}