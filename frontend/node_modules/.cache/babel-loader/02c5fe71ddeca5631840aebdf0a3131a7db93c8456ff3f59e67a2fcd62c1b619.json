{"ast":null,"code":"import axios from 'axios';\nimport { apiUrl } from '../apiConfig';\nconst eventService = {\n  getEvents: async () => {\n    try {\n      var _localStorage$getItem;\n      const token = (_localStorage$getItem = localStorage.getItem('token')) === null || _localStorage$getItem === void 0 ? void 0 : _localStorage$getItem.trim();\n      console.log('Token:', token);\n      console.log('Token Length:', token ? token.length : 'No token found');\n      if (!token || token.split('.').length !== 3) {\n        throw new Error('Invalid token format');\n      }\n      const response = await axios.get(`${apiUrl}/api/events`, {\n        // Ensure correct endpoint\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching events:', error);\n      return []; // Consider handling this error more explicitly in the UI\n    }\n  },\n  addEvent: async eventData => {\n    try {\n      var _localStorage$getItem2;\n      const token = (_localStorage$getItem2 = localStorage.getItem('token')) === null || _localStorage$getItem2 === void 0 ? void 0 : _localStorage$getItem2.trim();\n      console.log('Token:', token);\n      console.log('Token Length:', token ? token.length : 'No token found');\n      if (!token || token.split('.').length !== 3) {\n        throw new Error('Invalid token format');\n      }\n      const response = await axios.post(`${apiUrl}/api/events`, eventData, {\n        // Ensure correct endpoint\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error adding event:', error);\n      throw error; // Ensure proper error handling in the UI\n    }\n  }\n};\nexport default eventService;","map":{"version":3,"names":["axios","apiUrl","eventService","getEvents","_localStorage$getItem","token","localStorage","getItem","trim","console","log","length","split","Error","response","get","headers","Authorization","data","error","addEvent","eventData","_localStorage$getItem2","post"],"sources":["C:/Users/Lenovo/Desktop/dclm-ipswich-website/frontend/src/services/eventService.js"],"sourcesContent":["import axios from 'axios';\r\nimport { apiUrl } from '../apiConfig';\r\n\r\nconst eventService = {\r\n  getEvents: async () => {\r\n    try {\r\n      const token = localStorage.getItem('token')?.trim();\r\n      console.log('Token:', token);\r\n      console.log('Token Length:', token ? token.length : 'No token found');\r\n\r\n      if (!token || token.split('.').length !== 3) {\r\n        throw new Error('Invalid token format');\r\n      }\r\n\r\n      const response = await axios.get(`${apiUrl}/api/events`, { // Ensure correct endpoint\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching events:', error);\r\n      return []; // Consider handling this error more explicitly in the UI\r\n    }\r\n  },\r\n\r\n  addEvent: async (eventData) => {\r\n    try {\r\n      const token = localStorage.getItem('token')?.trim();\r\n      console.log('Token:', token);\r\n      console.log('Token Length:', token ? token.length : 'No token found');\r\n\r\n      if (!token || token.split('.').length !== 3) {\r\n        throw new Error('Invalid token format');\r\n      }\r\n\r\n      const response = await axios.post(`${apiUrl}/api/events`, eventData, { // Ensure correct endpoint\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error adding event:', error);\r\n      throw error; // Ensure proper error handling in the UI\r\n    }\r\n  },\r\n};\r\n\r\nexport default eventService;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,cAAc;AAErC,MAAMC,YAAY,GAAG;EACnBC,SAAS,EAAE,MAAAA,CAAA,KAAY;IACrB,IAAI;MAAA,IAAAC,qBAAA;MACF,MAAMC,KAAK,IAAAD,qBAAA,GAAGE,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,cAAAH,qBAAA,uBAA7BA,qBAAA,CAA+BI,IAAI,CAAC,CAAC;MACnDC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEL,KAAK,CAAC;MAC5BI,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEL,KAAK,GAAGA,KAAK,CAACM,MAAM,GAAG,gBAAgB,CAAC;MAErE,IAAI,CAACN,KAAK,IAAIA,KAAK,CAACO,KAAK,CAAC,GAAG,CAAC,CAACD,MAAM,KAAK,CAAC,EAAE;QAC3C,MAAM,IAAIE,KAAK,CAAC,sBAAsB,CAAC;MACzC;MAEA,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,GAAGd,MAAM,aAAa,EAAE;QAAE;QACzDe,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUZ,KAAK;QAChC;MACF,CAAC,CAAC;MAEF,OAAOS,QAAQ,CAACI,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdV,OAAO,CAACU,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C,OAAO,EAAE,CAAC,CAAC;IACb;EACF,CAAC;EAEDC,QAAQ,EAAE,MAAOC,SAAS,IAAK;IAC7B,IAAI;MAAA,IAAAC,sBAAA;MACF,MAAMjB,KAAK,IAAAiB,sBAAA,GAAGhB,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,cAAAe,sBAAA,uBAA7BA,sBAAA,CAA+Bd,IAAI,CAAC,CAAC;MACnDC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEL,KAAK,CAAC;MAC5BI,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEL,KAAK,GAAGA,KAAK,CAACM,MAAM,GAAG,gBAAgB,CAAC;MAErE,IAAI,CAACN,KAAK,IAAIA,KAAK,CAACO,KAAK,CAAC,GAAG,CAAC,CAACD,MAAM,KAAK,CAAC,EAAE;QAC3C,MAAM,IAAIE,KAAK,CAAC,sBAAsB,CAAC;MACzC;MAEA,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACuB,IAAI,CAAC,GAAGtB,MAAM,aAAa,EAAEoB,SAAS,EAAE;QAAE;QACrEL,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUZ,KAAK;QAChC;MACF,CAAC,CAAC;MAEF,OAAOS,QAAQ,CAACI,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdV,OAAO,CAACU,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3C,MAAMA,KAAK,CAAC,CAAC;IACf;EACF;AACF,CAAC;AAED,eAAejB,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}