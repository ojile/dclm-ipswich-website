{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\dclm-ipswich-website\\\\frontend\\\\src\\\\components\\\\SermonCard.js\";\n// src/components/SermonCard.js\nimport React from 'react';\nimport '../assets/styles/components-css/sermon-card.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SermonCard = ({\n  title,\n  content,\n  date,\n  videoId\n}) => {\n  // Ensure the videoId is correctly formatted\n  const formattedVideoId = videoId ? videoId.split('?')[0] : \"QOqoY59knds\"; // Default video ID if none provided\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sermon-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n      className: \"video-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"iframe\", {\n        src: `https://www.youtube.com/embed/${formattedVideoId}` // Use the actual video ID\n        ,\n        title: title,\n        frameBorder: \"0\",\n        allowFullScreen: true,\n        \"aria-label\": title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: title || \"No Title Available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: content || \"No description available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"date\",\n        children: date ? new Date(date).toLocaleDateString() : \"Date not available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_c = SermonCard;\nexport default SermonCard;\nvar _c;\n$RefreshReg$(_c, \"SermonCard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","SermonCard","title","content","date","videoId","formattedVideoId","split","className","children","src","frameBorder","allowFullScreen","fileName","_jsxFileName","lineNumber","columnNumber","Date","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/dclm-ipswich-website/frontend/src/components/SermonCard.js"],"sourcesContent":["// src/components/SermonCard.js\r\nimport React from 'react';\r\nimport '../assets/styles/components-css/sermon-card.css';\r\n\r\nconst SermonCard = ({ title, content, date, videoId }) => {\r\n  // Ensure the videoId is correctly formatted\r\n  const formattedVideoId = videoId ? videoId.split('?')[0] : \"QOqoY59knds\"; // Default video ID if none provided\r\n\r\n  return (\r\n    <div className=\"sermon-card\">\r\n      <figure className=\"video-container\">\r\n        <iframe\r\n          src={`https://www.youtube.com/embed/${formattedVideoId}`} // Use the actual video ID\r\n          title={title}\r\n          frameBorder=\"0\"\r\n          allowFullScreen\r\n          aria-label={title}\r\n        />\r\n        <div className=\"overlay\">\r\n          <h3>{title || \"No Title Available\"}</h3> {/* Display title or fallback */}\r\n        </div>\r\n      </figure>\r\n      <div className=\"card-content\">\r\n        <p>{content || \"No description available.\"}</p> {/* Display content or fallback */}    \r\n        <span className=\"date\">\r\n          {date ? new Date(date).toLocaleDateString() : \"Date not available.\"}\r\n        </span> {/* Format date or fallback */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SermonCard;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,iDAAiD;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,UAAU,GAAGA,CAAC;EAAEC,KAAK;EAAEC,OAAO;EAAEC,IAAI;EAAEC;AAAQ,CAAC,KAAK;EACxD;EACA,MAAMC,gBAAgB,GAAGD,OAAO,GAAGA,OAAO,CAACE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC;;EAE1E,oBACEP,OAAA;IAAKQ,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1BT,OAAA;MAAQQ,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBACjCT,OAAA;QACEU,GAAG,EAAE,iCAAiCJ,gBAAgB,EAAG,CAAC;QAAA;QAC1DJ,KAAK,EAAEA,KAAM;QACbS,WAAW,EAAC,GAAG;QACfC,eAAe;QACf,cAAYV;MAAM;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB,CAAC,eACFhB,OAAA;QAAKQ,SAAS,EAAC,SAAS;QAAAC,QAAA,gBACtBT,OAAA;UAAAS,QAAA,EAAKP,KAAK,IAAI;QAAoB;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,KAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACThB,OAAA;MAAKQ,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BT,OAAA;QAAAS,QAAA,EAAIN,OAAO,IAAI;MAA2B;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,KAAC,eAChDhB,OAAA;QAAMQ,SAAS,EAAC,MAAM;QAAAC,QAAA,EACnBL,IAAI,GAAG,IAAIa,IAAI,CAACb,IAAI,CAAC,CAACc,kBAAkB,CAAC,CAAC,GAAG;MAAqB;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/D,CAAC,KAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACG,EAAA,GA1BIlB,UAAU;AA4BhB,eAAeA,UAAU;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}