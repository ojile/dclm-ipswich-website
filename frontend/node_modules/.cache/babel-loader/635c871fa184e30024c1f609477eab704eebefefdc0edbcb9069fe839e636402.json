{"ast":null,"code":"// src/services/eventService.js\nimport axios from 'axios';\nimport { apiUrl } from '../apiConfig';\nconst eventService = {\n  getEvents: async () => {\n    try {\n      const response = await axios.get(`${apiUrl}/events`); // Ensure this URL matches your backend\n      return response.data; // Return the fetched data\n    } catch (error) {\n      console.error('Error fetching events:', error);\n      return []; // Return an empty array in case of an error\n    }\n  },\n  addEvent: async eventData => {\n    try {\n      const response = await axios.post(`${apiUrl}/events`, eventData); // Adjust this if your backend URL differs\n      return response.data; // Return the created event data\n    } catch (error) {\n      console.error('Error adding event:', error);\n      throw error; // Throw error to handle in component if needed\n    }\n  }\n};\nexport default eventService;","map":{"version":3,"names":["axios","apiUrl","eventService","getEvents","response","get","data","error","console","addEvent","eventData","post"],"sources":["C:/Users/Lenovo/Desktop/dclm-ipswich-website/frontend/src/services/eventService.js"],"sourcesContent":["// src/services/eventService.js\r\nimport axios from 'axios';\r\nimport { apiUrl } from '../apiConfig';\r\n\r\nconst eventService = {\r\n  getEvents: async () => {\r\n    try {\r\n      const response = await axios.get(`${apiUrl}/events`); // Ensure this URL matches your backend\r\n      return response.data; // Return the fetched data\r\n    } catch (error) {\r\n      console.error('Error fetching events:', error);\r\n      return []; // Return an empty array in case of an error\r\n    }\r\n  },\r\n\r\n  addEvent: async (eventData) => {\r\n    try {\r\n      const response = await axios.post(`${apiUrl}/events`, eventData); // Adjust this if your backend URL differs\r\n      return response.data; // Return the created event data\r\n    } catch (error) {\r\n      console.error('Error adding event:', error);\r\n      throw error; // Throw error to handle in component if needed\r\n    }\r\n  },\r\n};\r\n\r\nexport default eventService;\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,cAAc;AAErC,MAAMC,YAAY,GAAG;EACnBC,SAAS,EAAE,MAAAA,CAAA,KAAY;IACrB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,GAAGJ,MAAM,SAAS,CAAC,CAAC,CAAC;MACtD,OAAOG,QAAQ,CAACE,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C,OAAO,EAAE,CAAC,CAAC;IACb;EACF,CAAC;EAEDE,QAAQ,EAAE,MAAOC,SAAS,IAAK;IAC7B,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAMJ,KAAK,CAACW,IAAI,CAAC,GAAGV,MAAM,SAAS,EAAES,SAAS,CAAC,CAAC,CAAC;MAClE,OAAON,QAAQ,CAACE,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3C,MAAMA,KAAK,CAAC,CAAC;IACf;EACF;AACF,CAAC;AAED,eAAeL,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}