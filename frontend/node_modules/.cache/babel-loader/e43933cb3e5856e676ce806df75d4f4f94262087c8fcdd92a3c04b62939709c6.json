{"ast":null,"code":"import axios from 'axios';\nimport { apiUrl } from '../apiConfig';\nconst eventService = {\n  getEvents: async () => {\n    try {\n      const token = localStorage.getItem('token');\n      console.log('Token:', token); // Log the token to check its format\n\n      if (!token) {\n        throw new Error('No token found');\n      }\n      const response = await axios.get(`${apiUrl}/events`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching events:', error);\n      return [];\n    }\n  },\n  addEvent: async eventData => {\n    try {\n      const token = localStorage.getItem('token');\n      console.log('Token:', token); // Log the token to check its format\n\n      if (!token) {\n        throw new Error('No token found');\n      }\n      const response = await axios.post(`${apiUrl}/events`, eventData, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error adding event:', error);\n      throw error;\n    }\n  }\n};\nexport default eventService;","map":{"version":3,"names":["axios","apiUrl","eventService","getEvents","token","localStorage","getItem","console","log","Error","response","get","headers","Authorization","data","error","addEvent","eventData","post"],"sources":["C:/Users/Lenovo/Desktop/dclm-ipswich-website/frontend/src/services/eventService.js"],"sourcesContent":["import axios from 'axios';\r\nimport { apiUrl } from '../apiConfig';\r\n\r\nconst eventService = {\r\n  getEvents: async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      console.log('Token:', token); // Log the token to check its format\r\n\r\n      if (!token) {\r\n        throw new Error('No token found');\r\n      }\r\n\r\n      const response = await axios.get(`${apiUrl}/events`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching events:', error);\r\n      return [];\r\n    }\r\n  },\r\n\r\n  addEvent: async (eventData) => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      console.log('Token:', token); // Log the token to check its format\r\n\r\n      if (!token) {\r\n        throw new Error('No token found');\r\n      }\r\n\r\n      const response = await axios.post(`${apiUrl}/events`, eventData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error adding event:', error);\r\n      throw error;\r\n    }\r\n  },\r\n};\r\n\r\nexport default eventService;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,cAAc;AAErC,MAAMC,YAAY,GAAG;EACnBC,SAAS,EAAE,MAAAA,CAAA,KAAY;IACrB,IAAI;MACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3CC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEJ,KAAK,CAAC,CAAC,CAAC;;MAE9B,IAAI,CAACA,KAAK,EAAE;QACV,MAAM,IAAIK,KAAK,CAAC,gBAAgB,CAAC;MACnC;MAEA,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,GAAGV,MAAM,SAAS,EAAE;QACnDW,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUT,KAAK;QAChC;MACF,CAAC,CAAC;MAEF,OAAOM,QAAQ,CAACI,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdR,OAAO,CAACQ,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C,OAAO,EAAE;IACX;EACF,CAAC;EAEDC,QAAQ,EAAE,MAAOC,SAAS,IAAK;IAC7B,IAAI;MACF,MAAMb,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3CC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEJ,KAAK,CAAC,CAAC,CAAC;;MAE9B,IAAI,CAACA,KAAK,EAAE;QACV,MAAM,IAAIK,KAAK,CAAC,gBAAgB,CAAC;MACnC;MAEA,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACkB,IAAI,CAAC,GAAGjB,MAAM,SAAS,EAAEgB,SAAS,EAAE;QAC/DL,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUT,KAAK;QAChC;MACF,CAAC,CAAC;MAEF,OAAOM,QAAQ,CAACI,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdR,OAAO,CAACQ,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3C,MAAMA,KAAK;IACb;EACF;AACF,CAAC;AAED,eAAeb,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}