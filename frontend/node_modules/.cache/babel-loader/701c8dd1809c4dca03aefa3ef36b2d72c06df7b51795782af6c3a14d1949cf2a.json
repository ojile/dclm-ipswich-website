{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\dclm-ipswich-website\\\\frontend\\\\src\\\\pages\\\\Sermons.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect } from 'react';\nimport SermonCard from '../components/SermonCard';\nimport { SermonContext } from '../assets/context/SermonContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Sermons = () => {\n  _s();\n  const {\n    sermons,\n    loading,\n    error,\n    refresh\n  } = useContext(SermonContext);\n  useEffect(() => {\n    console.log('Sermons:', sermons); // Log sermons to check the data\n  }, [sermons]);\n\n  // Optionally use refresh to fetch sermons again, e.g., on a button click\n  const handleRefresh = () => {\n    refresh(); // Call refresh to get the latest sermons\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading sermons...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRefresh,\n        children: \"Try Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"All Sermons\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), sermons && sermons.length > 0 ? sermons.map(sermon => /*#__PURE__*/_jsxDEV(SermonCard, {\n      ...sermon\n    }, sermon.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No sermons available at the moment. Please check back later.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(Sermons, \"Ac4BXnCXxCaNtwOVInI7rf7Lu34=\");\n_c = Sermons;\nexport default Sermons;\nvar _c;\n$RefreshReg$(_c, \"Sermons\");","map":{"version":3,"names":["React","useContext","useEffect","SermonCard","SermonContext","jsxDEV","_jsxDEV","Sermons","_s","sermons","loading","error","refresh","console","log","handleRefresh","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","map","sermon","id","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/dclm-ipswich-website/frontend/src/pages/Sermons.js"],"sourcesContent":["import React, { useContext, useEffect } from 'react';\r\nimport SermonCard from '../components/SermonCard';\r\nimport { SermonContext } from '../assets/context/SermonContext';\r\n\r\nconst Sermons = () => {\r\n  const { sermons, loading, error, refresh } = useContext(SermonContext);\r\n\r\n  useEffect(() => {\r\n    console.log('Sermons:', sermons); // Log sermons to check the data\r\n  }, [sermons]);\r\n\r\n  // Optionally use refresh to fetch sermons again, e.g., on a button click\r\n  const handleRefresh = () => {\r\n    refresh(); // Call refresh to get the latest sermons\r\n  };\r\n\r\n  if (loading) {\r\n    return <p>Loading sermons...</p>;\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div>\r\n        <p>{error}</p> {/* Display error message if there's an error */}\r\n        <button onClick={handleRefresh}>Try Again</button> {/* Button to refresh */}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>All Sermons</h1>\r\n      {sermons && sermons.length > 0 ? (\r\n        sermons.map(sermon => (\r\n          <SermonCard key={sermon.id} {...sermon} />\r\n        ))\r\n      ) : (\r\n        <p>No sermons available at the moment. Please check back later.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sermons;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AACpD,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,aAAa,QAAQ,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM;IAAEC,OAAO;IAAEC,OAAO;IAAEC,KAAK;IAAEC;EAAQ,CAAC,GAAGX,UAAU,CAACG,aAAa,CAAC;EAEtEF,SAAS,CAAC,MAAM;IACdW,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEL,OAAO,CAAC,CAAC,CAAC;EACpC,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;;EAEb;EACA,MAAMM,aAAa,GAAGA,CAAA,KAAM;IAC1BH,OAAO,CAAC,CAAC,CAAC,CAAC;EACb,CAAC;EAED,IAAIF,OAAO,EAAE;IACX,oBAAOJ,OAAA;MAAAU,QAAA,EAAG;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAClC;EAEA,IAAIT,KAAK,EAAE;IACT,oBACEL,OAAA;MAAAU,QAAA,gBACEV,OAAA;QAAAU,QAAA,EAAIL;MAAK;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,KAAC,eACfd,OAAA;QAAQe,OAAO,EAAEN,aAAc;QAAAC,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC;EAEV;EAEA,oBACEd,OAAA;IAAAU,QAAA,gBACEV,OAAA;MAAAU,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACnBX,OAAO,IAAIA,OAAO,CAACa,MAAM,GAAG,CAAC,GAC5Bb,OAAO,CAACc,GAAG,CAACC,MAAM,iBAChBlB,OAAA,CAACH,UAAU;MAAA,GAAqBqB;IAAM,GAArBA,MAAM,CAACC,EAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CAC1C,CAAC,gBAEFd,OAAA;MAAAU,QAAA,EAAG;IAA4D;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACnE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACZ,EAAA,CArCID,OAAO;AAAAmB,EAAA,GAAPnB,OAAO;AAuCb,eAAeA,OAAO;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}