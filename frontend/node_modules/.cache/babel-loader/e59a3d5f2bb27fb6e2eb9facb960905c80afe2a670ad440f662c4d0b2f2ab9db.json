{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\dclm-ipswich-website\\\\frontend\\\\src\\\\assets\\\\context\\\\EventContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport eventService from '../../services/eventService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EventContext = /*#__PURE__*/createContext();\nconst EventProvider = ({\n  children\n}) => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchEvents = async () => {\n      try {\n        const data = await eventService.getEvents();\n        setEvents(data);\n      } catch (err) {\n        console.error('Error fetching events:', err);\n        setError('Failed to load events. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchEvents();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(EventContext.Provider, {\n    value: {\n      events,\n      loading,\n      error\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(EventProvider, \"TlsuwTtpJOZ2tMfhB3uipTGA4lI=\");\n_c = EventProvider;\nexport default EventProvider;\nvar _c;\n$RefreshReg$(_c, \"EventProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","eventService","jsxDEV","_jsxDEV","EventContext","EventProvider","children","_s","events","setEvents","loading","setLoading","error","setError","fetchEvents","data","getEvents","err","console","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/dclm-ipswich-website/frontend/src/assets/context/EventContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport eventService from '../../services/eventService';\r\n\r\nexport const EventContext = createContext();\r\n\r\nconst EventProvider = ({ children }) => {\r\n  const [events, setEvents] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchEvents = async () => {\r\n      try {\r\n        const data = await eventService.getEvents();\r\n        setEvents(data);\r\n      } catch (err) {\r\n        console.error('Error fetching events:', err);\r\n        setError('Failed to load events. Please try again later.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchEvents();\r\n  }, []);\r\n\r\n  return (\r\n    <EventContext.Provider value={{ events, loading, error }}>\r\n      {children}\r\n    </EventContext.Provider>\r\n  );\r\n};\r\n\r\nexport default EventProvider;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,YAAY,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,OAAO,MAAMC,YAAY,gBAAGN,aAAa,CAAC,CAAC;AAE3C,MAAMO,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMc,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,IAAI,GAAG,MAAMd,YAAY,CAACe,SAAS,CAAC,CAAC;QAC3CP,SAAS,CAACM,IAAI,CAAC;MACjB,CAAC,CAAC,OAAOE,GAAG,EAAE;QACZC,OAAO,CAACN,KAAK,CAAC,wBAAwB,EAAEK,GAAG,CAAC;QAC5CJ,QAAQ,CAAC,gDAAgD,CAAC;MAC5D,CAAC,SAAS;QACRF,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDG,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA,CAACC,YAAY,CAACe,QAAQ;IAACC,KAAK,EAAE;MAAEZ,MAAM;MAAEE,OAAO;MAAEE;IAAM,CAAE;IAAAN,QAAA,EACtDA;EAAQ;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACjB,EAAA,CA1BIF,aAAa;AAAAoB,EAAA,GAAbpB,aAAa;AA4BnB,eAAeA,aAAa;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}