{"ast":null,"code":"import axios from 'axios';\nimport { apiUrl } from '../apiConfig';\nconst eventService = {\n  getEvents: async () => {\n    try {\n      // Retrieve token from localStorage\n      const token = localStorage.getItem('token');\n\n      // Ensure token exists before making the request\n      if (!token) {\n        throw new Error('No token found');\n      }\n      const response = await axios.get(`${apiUrl}/events`, {\n        headers: {\n          Authorization: `Bearer ${token}` // Set the Authorization header\n        }\n      });\n      return response.data; // Return the fetched data\n    } catch (error) {\n      console.error('Error fetching events:', error);\n      return []; // Return an empty array in case of an error\n    }\n  },\n  addEvent: async eventData => {\n    try {\n      // Retrieve token from localStorage\n      const token = localStorage.getItem('token');\n\n      // Ensure token exists before making the request\n      if (!token) {\n        throw new Error('No token found');\n      }\n      const response = await axios.post(`${apiUrl}/events`, eventData, {\n        headers: {\n          Authorization: `Bearer ${token}` // Set the Authorization header\n        }\n      });\n      return response.data; // Return the created event data\n    } catch (error) {\n      console.error('Error adding event:', error);\n      throw error; // Throw error to handle in component if needed\n    }\n  }\n};\nexport default eventService;","map":{"version":3,"names":["axios","apiUrl","eventService","getEvents","token","localStorage","getItem","Error","response","get","headers","Authorization","data","error","console","addEvent","eventData","post"],"sources":["C:/Users/Lenovo/Desktop/dclm-ipswich-website/frontend/src/services/eventService.js"],"sourcesContent":["import axios from 'axios';\r\nimport { apiUrl } from '../apiConfig';\r\n\r\nconst eventService = {\r\n  getEvents: async () => {\r\n    try {\r\n      // Retrieve token from localStorage\r\n      const token = localStorage.getItem('token');\r\n\r\n      // Ensure token exists before making the request\r\n      if (!token) {\r\n        throw new Error('No token found');\r\n      }\r\n\r\n      const response = await axios.get(`${apiUrl}/events`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`, // Set the Authorization header\r\n        },\r\n      });\r\n\r\n      return response.data; // Return the fetched data\r\n    } catch (error) {\r\n      console.error('Error fetching events:', error);\r\n      return []; // Return an empty array in case of an error\r\n    }\r\n  },\r\n\r\n  addEvent: async (eventData) => {\r\n    try {\r\n      // Retrieve token from localStorage\r\n      const token = localStorage.getItem('token');\r\n\r\n      // Ensure token exists before making the request\r\n      if (!token) {\r\n        throw new Error('No token found');\r\n      }\r\n\r\n      const response = await axios.post(`${apiUrl}/events`, eventData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`, // Set the Authorization header\r\n        },\r\n      });\r\n\r\n      return response.data; // Return the created event data\r\n    } catch (error) {\r\n      console.error('Error adding event:', error);\r\n      throw error; // Throw error to handle in component if needed\r\n    }\r\n  },\r\n};\r\n\r\nexport default eventService;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,cAAc;AAErC,MAAMC,YAAY,GAAG;EACnBC,SAAS,EAAE,MAAAA,CAAA,KAAY;IACrB,IAAI;MACF;MACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;;MAE3C;MACA,IAAI,CAACF,KAAK,EAAE;QACV,MAAM,IAAIG,KAAK,CAAC,gBAAgB,CAAC;MACnC;MAEA,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,GAAGR,MAAM,SAAS,EAAE;QACnDS,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUP,KAAK,EAAE,CAAE;QACpC;MACF,CAAC,CAAC;MAEF,OAAOI,QAAQ,CAACI,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C,OAAO,EAAE,CAAC,CAAC;IACb;EACF,CAAC;EAEDE,QAAQ,EAAE,MAAOC,SAAS,IAAK;IAC7B,IAAI;MACF;MACA,MAAMZ,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;;MAE3C;MACA,IAAI,CAACF,KAAK,EAAE;QACV,MAAM,IAAIG,KAAK,CAAC,gBAAgB,CAAC;MACnC;MAEA,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACiB,IAAI,CAAC,GAAGhB,MAAM,SAAS,EAAEe,SAAS,EAAE;QAC/DN,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUP,KAAK,EAAE,CAAE;QACpC;MACF,CAAC,CAAC;MAEF,OAAOI,QAAQ,CAACI,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3C,MAAMA,KAAK,CAAC,CAAC;IACf;EACF;AACF,CAAC;AAED,eAAeX,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}